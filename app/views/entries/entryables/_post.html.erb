<% post = entry.entryable %>

<%= render UI::Card::Component.new(class: "w-full") do |header| %>
  <%= render UI::Card::HeaderComponent.new(class: "flex justify-between") do |header| %>
    <div class="flex items-center gap-2 mb-2">
      <%= link_to profile_path(entry.owner.username), class: "inline-flex", data: { turbo_frame: :_top } do %>
        <%= render UI::Avatar::Component.new(
          src: entry.owner.avatar.variant(:thumb),
          size: :sm,
        ) %>
      <% end %>
      <div>
        <%= link_to profile_path(entry.owner.username), class: "inline-flex", data: { turbo_frame: :_top } do %>
          <p class="font-heading"><%= entry.owner.name %></p>
        <% end %>
        <p class="font-heading text-sm text-zinc-500 font-normal dark:text-zinc-400"><%= localize(post.created_at.to_time, format: :friendly) %></p>
      </div>
    </div>

    <% if allowed_to?(:destroy?, entry) && destroy_entry_path.present? %>
      <div>
        <%= render UI::Dropdown::Component.new(alignment: :right) do |dropdown| %>
          <% dropdown.with_trigger do %>
            <%= render UI::Button::Component.new(variant: :square) do |button| %>
              <% button.with_leading_icon("ellipsis-horizontal") %>
            <% end %>
          <% end %>

          <% dropdown.with_item do %>
            <%= button_to(
              t(".destroy"),
              destroy_entry_path,
              method: :delete,
              data: {
                turbo_frame: :_top,
              },
            ) %>
          <% end %>
        <% end %>
      </div>
    <% end %>
  <% end %>

  <%= render UI::Card::BodyComponent.new do |header| %>
    <div class="flex flex-col">
      <p class="h6">
        <%= post.title %>
      </p>

      <%= entry.render_content %>

      <% if post.goal_progress_change.present? %>
        <div class="flex items-center justify-start mt-2 lg:mt-4">
          <%= render Goals::ProgressIndicator::Component.new(
            progress_change: post.goal_progress_change,
          ) %>
        </div>
      <% end %>
    </div>
  <% end %>

  <% if post.images.any? %>
    <div class="mt-2 lg:mt-4">
      <%= render UI::Carousel::Component.new(
        class: "w-full",
        options: {
          watchDrag: false
        }
      ) do |carousel| %>
        <% carousel.with_viewport(class: aspect_ratio_css_classes_for(post.images)) do |viewport| %>
          <% post.images.each do |image| %>
            <% viewport.with_slide do %>
              <%= image_tag image.variant(:large),
              class: "object-cover w-full h-full",
              loading: :lazy %>
            <% end %>
          <% end %>
        <% end %>

        <% carousel.with_next_button %>
        <% carousel.with_previous_button %>

        <% if post.images.count > 1 %>
          <% Array.new(post.images.count).each_with_index do |_, index| %>
            <% carousel.with_indicator(slide: index + 1) %>
          <% end %>
        <% end %>
      <% end %>
    </div>
  <% end %>

  <%= render UI::Card::ActionsComponent.new do %>
    <div class="flex items-center">
      <div class="flex-1 flex items-center gap-4">
        <%= turbo_frame_tag dom_id(entry, :likes_count) do %>
          <%= render Entries::LikeCount::Component.new(entry:) %>
        <% end %>
      </div>
      <div class="flex items-center gap-2">
        <%= custom_form_with(
            url: entry_like_path(entry),
            method: entry.liked? ? :delete : :post,
            id: dom_id(entry, :like_button),
            class: "inline-flex items-center justify-center"
          ) do %>
          <%= render LikeButton::Component.new(type: :submit, liked: entry.liked?) %>
        <% end %>

        <%= render UI::Button::Component.new(
          builder: :a,
          href: new_entry_comment_path(entry),
          variant: :rounded,
          color: :transparent,
          size: :sm,
          data: {
            turbo: true,
            turbo_frame: dom_id(entry, :new_comment)
          }
        ) do |button| %>
          <% button.with_trailing_icon("chat-bubble-oval-left") %>
        <% end %>
      </div>
    </div>
  <% end %>

  <%= turbo_frame_tag dom_id(entry, :new_comment) %>

  <%= render partial: "entries/comments/comment_section", locals: { entry: } %>
<% end %>
